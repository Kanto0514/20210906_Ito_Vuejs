{"remainingRequest":"/Users/itoumikihito/Documents/COACHTECH/Advance/0905/router-pj/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/itoumikihito/Documents/COACHTECH/Advance/0905/router-pj/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/itoumikihito/Documents/COACHTECH/Advance/0905/router-pj/src/App.vue","mtime":1630870113469},{"path":"/Users/itoumikihito/Documents/COACHTECH/Advance/0905/router-pj/node_modules/cache-loader/dist/cjs.js","mtime":1621146108816},{"path":"/Users/itoumikihito/Documents/COACHTECH/Advance/0905/router-pj/node_modules/vue-loader/lib/index.js","mtime":1627963386744}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3VG9kbzogIiIsCiAgICAgIGNvbnRhY3RMaXN0czogW10sCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0Q29udGFjdCgpIHsKICAgICAgY29uc3QgcmVzRGF0YSA9IGF3YWl0IGF4aW9zLmdldCgiaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9jb250YWN0LyIpOwogICAgICB0aGlzLmNvbnRhY3RMaXN0cyA9IHJlc0RhdGEuZGF0YS5kYXRhOwogICAgfSwKICAgIGFzeW5jIGluc2VydENvbnRhY3QoKSB7CiAgICAgIGNvbnN0IHNlbmREYXRhID0gewogICAgICAgIHRvZG86IHRoaXMubmV3VG9kbwogICAgICB9OwogICAgICBhd2FpdCBheGlvcy5wb3N0KCJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2NvbnRhY3QvIiwgc2VuZERhdGEpOwogICAgICBhd2FpdCB0aGlzLmdldENvbnRhY3QoKTsKICAgIH0sCiAgICBhc3luYyB1cGRhdGVDb250YWN0KGlkLCB0b2RvKSB7CiAgICAgIGNvbnN0IHNlbmREYXRhID0gewogICAgICAgIHRvZG86IHRvZG8KICAgICAgfTsKICAgICAgYXdhaXQgYXhpb3MucHV0KCJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2NvbnRhY3QvIiArIGlkLCBzZW5kRGF0YSk7CiAgICAgIGF3YWl0IHRoaXMuZ2V0Q29udGFjdCgpOwogICAgfSwKICAgIGFzeW5jIGRlbGV0ZUNvbnRhY3QoaWQpIHsKICAgICAgYXdhaXQgYXhpb3MuZGVsZXRlKCJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2NvbnRhY3QvIiArIGlkKTsKICAgICAgYXdhaXQgdGhpcy5nZXRDb250YWN0KCk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0Q29udGFjdCgpOwogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\n\n  <div class=\"app\">\n\n    <h1>Todo List</h1>\n    \n      <table class=\"add\">\n        <tr>\n\n          <td class=\"tdnew\">\n            <input type=\"text\" todo=\"todo\" v-model=\"newTodo\" />\n          </td>\n\n          <td class=\"tdadd\">\n            <button class=\"addbt\" @click=\"insertContact\">Add</button>\n          </td>\n\n        </tr>\n      </table>\n\n        \n      \n   \n      <table class=\"list\">\n\n        <tr v-for=\"item in contactLists\" :key=\"item.id\">\n\n          <td class=\"listtext\">\n            <input class=\"todolist\" type=\"text\" v-model=\"item.todo\" />\n          </td>\n\n          <td class=\"udbtn\">\n            <button class=\"upbt\" @click=\"updateContact(item.id, item.todo)\">Update</button>\n          </td>\n\n          <td class=\"udbtn\">\n            <button class=\"debt\" @click=\"deleteContact(item.id)\">Delete</button>\n          </td>\n        </tr>\n      </table>\n    \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      newTodo: \"\",\n      contactLists: [],\n    };\n  },\n  methods: {\n    async getContact() {\n      const resData = await axios.get(\"http://127.0.0.1:8000/api/contact/\");\n      this.contactLists = resData.data.data;\n    },\n    async insertContact() {\n      const sendData = {\n        todo: this.newTodo\n      };\n      await axios.post(\"http://127.0.0.1:8000/api/contact/\", sendData);\n      await this.getContact();\n    },\n    async updateContact(id, todo) {\n      const sendData = {\n        todo: todo\n      };\n      await axios.put(\"http://127.0.0.1:8000/api/contact/\" + id, sendData);\n      await this.getContact();\n    },\n    async deleteContact(id) {\n      await axios.delete(\"http://127.0.0.1:8000/api/contact/\" + id);\n      await this.getContact();\n    },\n  },\n  created() {\n    this.getContact();\n  },\n};\n</script>\n\n<style>\n\n\nh1{\n   font-family: 'Sacramento', cursive;\n}\n\n\n/*全体背景 */\nbody{ \n  background-color: lightblue;\n}\n\n/*全体要素(枠、背景など) */\n.app{\n  background-color: linen;\n  padding: 20px 10% 50px 10%;\n  margin: 130px auto;\n  border: solid 3px gray;\n  border-radius: 10px;\n  width: 60%;\n}\n\n/*それぞれの表(入力テキスト、Addボタン),(追加済みリスト,Update,Deleteボタン) */\ntable.add,table.list{\n  padding: 10px 0;\n  width: 100%;\n}\n\n/*Todo追加テキスト セル */\n.tdnew{\n  width: 70%;\n}\n\n/*Todo追加ボタン セル */\n.tbadd{\n  width: 90%;\n}\n\n/*Todo一覧テキスト セル */\n.listtext{\n  width: 60%;\n}\n\n/*Todo更新,削除ボタン セル */\n.udbtn{\n  width: 20%;\n}\n\n\n\n/*入力要素の全体設定 */\ninput{\n  width: 80%;\n  height: 20px;\n  margin: 0px 10px;\n  padding: 2px;\n  border-radius: 3px; \n}\n\n\n/*ボタンの全体設定 */\nbutton{\n  background-color: white;\n  padding: 5px auto; \n  font-size: 15px;\n  text-decoration: none;\n  border-radius: 3px; \n  border:solid 3px ;\n  transition: 0.2s ease; /* スタイルが変化する時間 */\n}\n\n\n/*追加ボタン */\n.addbt{\n  width: 90%;\n  color: blue;\n}\n\nbutton.addbt:hover {\n  color: white;\n  background: blue;\n  border-color: blue;\n}\n\n/*更新ボタン */\n.upbt{\n  width: 90%;\n  color: crimson;\n}\n\nbutton.upbt:hover {\n  color: white;\n  background: crimson;\n  border-color: crimson;\n}\n\n/*削除ボタン */\n.debt{\n  width: 90%;\n  color: black;\n}\n\nbutton.debt:hover {\n  color: white;\n  background: black;\n  border-color: black;\n}\n\n\n\n\n\n\n\n\n\n</style>"]}]}